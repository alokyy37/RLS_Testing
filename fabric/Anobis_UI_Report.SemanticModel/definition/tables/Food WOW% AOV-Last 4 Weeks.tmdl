table 'Food WOW% AOV-Last 4 Weeks'
	lineageTag: a7928588-988e-43ab-a91c-0e56d72750c8

	column print_0
		dataType: double
		sourceProviderType: double
		lineageTag: d163a4c4-e388-4ecc-a3e7-de897221bf33
		summarizeBy: sum
		sourceColumn: print_0

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	partition 'Food WOW% AOV-Last 4 Weeks' = m
		mode: directQuery
		queryGroup: 'Food\Food- Last 4 weeks\Food- Sales\Food-AOV'
		source = ```
				let
				// Get current date and time in UTC
				TodayDateTimeZone = DateTimeZone.UtcNow(),
				
				// Convert UTC time to IST (Indian Standard Time, UTC +5:30)
				TodaysDateTime = TodayDateTimeZone + #duration(0, 5, 30, 0),
				
				// Get today's date in IST (removes the time part)
				
				TodaysTime = Time.ToText(DateTime.Time(TodaysDateTime), "HH:mm:ss"),
				
				TodayDate = DateTime.Date(TodaysDateTime),
				
				// Get the date 28 days ago in IST
				Last28Days = TodayDate - #duration(28, 0, 0, 0),
				
				// Last 28 days current week to 12:00 AM IST
				StartOfLast28Days = DateTime.FromText(Date.ToText(Last28Days) & " 00:00:00"),
				StartOfLast28DaysFormatted = DateTime.ToText(StartOfLast28Days, "yyyy-MM-dd HH:mm:ss"),
				CurrentDate = DateTime.FromText(Date.ToText(DateTime.Date(TodaysDateTime)) &  " 00:00:00"),
				EndofCurrentDateFormatted = DateTime.ToText(CurrentDate, "yyyy-MM-dd HH:mm:ss"),
				
				// Last 28 days previous week to 12:00 AM IST
				Last4WeekStartDateTime = StartOfLast28Days - #duration(28, 0, 0, 0),
				StartOfLast4Week = DateTime.FromText(Date.ToText(DateTime.Date(Last4WeekStartDateTime)) & " 00:00:00"),
				StartOfLast4WeekFormatted = DateTime.ToText(StartOfLast4Week, "yyyy-MM-dd HH:mm:ss"),
				EndofLast4WeekFormatted = StartOfLast28DaysFormatted,
				
				    // Reference the Table Name parameter dynamically
				    TableName = FoodTableName,
				
				     // Reference all dynamic parameters
				    CityParam = if Value.Is(City_Parameter, type list) then City_Parameter else {City_Parameter},
				    AreaParam = if Value.Is(Area_Parameter, type list) then Area_Parameter else {Area_Parameter},
				    BUParam = if Value.Is(BusinessUnit_Parameter, type list) then BusinessUnit_Parameter else {BusinessUnit_Parameter},
				    BCParam = if Value.Is(BusinessClassifier_Parameter, type list) then BusinessClassifier_Parameter else {BusinessClassifier_Parameter},
				    TimeSlotParam = if Value.Is(TimeSlot_Parameter, type list) then TimeSlot_Parameter else {TimeSlot_Parameter},
				
				    // Build Dynamic Conditions
				    CityCondition = if List.NonNullCount(CityParam) > 0 then " | where city in (" & Text.Combine(List.Transform(CityParam, each "'" & _ & "'"), ", ") & ")" else "",
				    AreaCondition = if List.NonNullCount(AreaParam) > 0 then " | where area in (" & Text.Combine(List.Transform(AreaParam, each "'" & _ & "'"), ", ") & ")" else "",
				    BUCondition = if List.NonNullCount(BUParam) > 0 then " | where business_unit in (" & Text.Combine(List.Transform(BUParam, each "'" & _ & "'"), ", ") & ")" else "",
				    BCCondition = if List.NonNullCount(BCParam) > 0 then " | where business_classifier in (" & Text.Combine(List.Transform(BCParam, each "'" & _ & "'"), ", ") & ")" else "",
				    TimeSlotCondition = if List.NonNullCount(TimeSlotParam) > 0 then " | where time_slot in (" & Text.Combine(List.Transform(TimeSlotParam, each "'" & _ & "'"), ", ") & ")" else "",
				
				
				    // Combine All Filters
				    CombinedFilters = CityCondition & AreaCondition & BUCondition & BCCondition & TimeSlotCondition,
				
				    // Format the query with dynamic start and end times
				
				    Query = "let currentUser = current_principal_details()['UserPrincipalName'];
				    let userCities = toscalar(
				        Anobis_RLS_MV
				        | where UserEmail_ID == currentUser
				        | summarize make_list(city)
				    );
				    let hasAllAccess = toscalar(
				        Anobis_RLS_MV
				        | where UserEmail_ID == currentUser and city == 'cities'
				        | count
				    );
				let currentperiod = " & TableName & " 
				| where created_on_ist >= datetime(' " & StartOfLast28DaysFormatted & "')
				| where created_on_ist < datetime(' " & EndofCurrentDateFormatted & " ')
				      and ((hasAllAccess > 0) or (city in (userCities)))
				        " & CombinedFilters & "
				| where order_status == 'completed'
				| where order_type != 'SUBSCRIPTION'
				| summarize GroupAvgGmv = avg(gmv_total), GroupCount = count()
				| summarize g = sum(GroupAvgGmv *GroupCount ), g1 = sum(GroupCount)
				| project  g/g1 ;
				let previousperiod = " & TableName & " 
				| where created_on_ist >= datetime(' " & StartOfLast4WeekFormatted & " ')
				| where created_on_ist < datetime(' " & EndofLast4WeekFormatted & " ')
				      and ((hasAllAccess > 0) or (city in (userCities)))
				        " & CombinedFilters & "
				| where order_status == 'completed'
				| where order_type != 'SUBSCRIPTION'
				| summarize GroupAvgGmv = avg(gmv_total), GroupCount = count()
				| summarize g = sum(GroupAvgGmv *GroupCount ), g1 = sum(GroupCount)
				| project  g/g1 ;
				// Run below to check green
				let currentperiodcount = toscalar(currentperiod);
				let previousperiodcount = toscalar(previousperiod);
				let percentage = toscalar(toreal((((toreal(currentperiodcount) - toreal(previousperiodcount)) / toreal(previousperiodcount)) * 100)));
				print(round(percentage, 2))",
				    // Get data from Azure Data Explorer with the dynamic query
				    Source = AzureDataExplorer.Contents(Cluster,DB, Query, [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null])
				in
				    Source
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

