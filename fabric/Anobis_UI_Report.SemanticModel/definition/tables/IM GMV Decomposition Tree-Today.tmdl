table 'IM GMV Decomposition Tree-Today'
	lineageTag: 64023d0b-7f73-4283-a0e0-e3cdd7ef2731

	column City
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: 9f355794-e447-4471-b15f-fcfc39e7ffe9
		summarizeBy: none
		sourceColumn: City

		annotation SummarizationSetBy = Automatic

	column Region
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: be6d7b7a-0097-4b4b-b8f0-d5433307f138
		summarizeBy: none
		sourceColumn: Region

		annotation SummarizationSetBy = Automatic

	column Zone
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: 0b641d45-9eb0-40ec-9796-1bcdb0e3576c
		summarizeBy: none
		sourceColumn: Zone

		annotation SummarizationSetBy = Automatic

	column 'Store ID'
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: a73aed4c-d680-43ef-90f2-60ba4aaec929
		summarizeBy: none
		sourceColumn: Store ID

		annotation SummarizationSetBy = Automatic

	column 'Delivery Type'
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: cee3fa96-428b-46c2-9e56-8d1eb6ca7c90
		summarizeBy: none
		sourceColumn: Delivery Type

		annotation SummarizationSetBy = Automatic

	column 'Delivery Slot'
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: 6b6f0626-28ff-42e0-8942-7bbd537124fc
		summarizeBy: none
		sourceColumn: Delivery Slot

		annotation SummarizationSetBy = Automatic

	column sum_gmv
		dataType: double
		sourceProviderType: double
		lineageTag: f8c73025-5f33-433d-a680-0679a1c4cc66
		summarizeBy: sum
		sourceColumn: sum_gmv

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	partition 'IM GMV Decomposition Tree-Today' = m
		mode: directQuery
		queryGroup: IM\IM-Today\IM-Sales\IM-GMV
		source = ```
				let
				    // Get current date and time in UTC
				    TodayDateTimeZone = DateTimeZone.UtcNow(),
				
				    // Convert UTC time to IST
				    TodaysDateTime = TodayDateTimeZone + #duration(0, 5, 30, 0),
				
				    TodaysTime = Time.ToText(DateTime.Time(TodaysDateTime), "HH:mm:ss"),
				
				    StartOfToday = DateTime.FromText(Date.ToText(DateTime.Date(TodaysDateTime)) & " 00:00:00"),
				
				    // // // Format the start and end dates to yyyy-MM-dd HH:mm:ss format
				    StartOfTodayFormatted = DateTime.ToText(StartOfToday, "yyyy-MM-dd HH:mm:ss"),
				    CurrentDateTime = DateTime.FromText(Date.ToText(DateTime.Date(TodaysDateTime)) & " " & TodaysTime),
				    CurrentDateTimeFormatted = DateTime.ToText(CurrentDateTime, "yyyy-MM-dd HH:mm:ss"),
				
				    // // Reference the Table Name parameter dynamically
				    TableName = IMTableName,
				
				    // Reference all dynamic parameters
				    IMCityParam = if Value.Is(IM_City_Parameter, type list) then IM_City_Parameter else {IM_City_Parameter},
				    RegionParam = if Value.Is(Region_Parameter, type list) then Region_Parameter else {Region_Parameter},
				    ZoneParam = if Value.Is(Zone_Parameter, type list) then Zone_Parameter else {Zone_Parameter},
				    StoreIDParam = if Value.Is(StoreID_Parameter, type list) then StoreID_Parameter else {StoreID_Parameter},
				    DeliveryTypeParam = if Value.Is(DeliveryType_Parameter, type list) then DeliveryType_Parameter else {DeliveryType_Parameter},
				    DeliverySlotParam = if Value.Is(DeliverySlot_Parameter, type list) then DeliverySlot_Parameter else {DeliverySlot_Parameter},
				
				    // BUild Dynamic Conditions
				    IMCityCondition = if List.NonNullCount(IMCityParam) > 0 then " | where city in (" & Text.Combine(List.Transform(IMCityParam, each "'" & _ & "'"), ", ") & ")" else "",
				    RegionCondition = if List.NonNullCount(RegionParam) > 0 then " | where region in (" & Text.Combine(List.Transform(RegionParam, each "'" & _ & "'"), ", ") & ")" else "",
				    ZoneCondition = if List.NonNullCount(ZoneParam) > 0 then " | where zone in (" & Text.Combine(List.Transform(ZoneParam, each "'" & _ & "'"), ", ") & ")" else "",
				    StoreIDCondition = if List.NonNullCount(StoreIDParam) > 0 then " | where store_id in (" & Text.Combine(List.Transform(StoreIDParam, each "'" & _ & "'"), ", ") & ")" else "",
				    DeliveryTypeCondition = if List.NonNullCount(DeliveryTypeParam) > 0 then " | where delivery_type in (" & Text.Combine(List.Transform(DeliveryTypeParam, each "'" & _ & "'"), ", ") & ")" else "",
				    DeliverySlotCondition = if List.NonNullCount(DeliverySlotParam) > 0 then " | where delivery_slot in (" & Text.Combine(List.Transform(DeliverySlotParam, each "'" & _ & "'"), ", ") & ")" else "",
				    
				    // Combine All Filters
				    CombinedFilters = IMCityCondition & RegionCondition & ZoneCondition & StoreIDCondition & DeliveryTypeCondition & DeliverySlotCondition,
				
				    // // Format the query with dynamic start and end times for yesterday in IST
				
				    Query = "let currentUser = current_principal_details()['UserPrincipalName'];
				    let userCities = toscalar(
				        Anobis_RLS_MV
				        | where UserEmail_ID == currentUser
				        | summarize make_list(city)
				    );
				    let hasAllAccess = toscalar(
				        Anobis_RLS_MV
				        | where UserEmail_ID == currentUser and city == 'cities'
				        | count
				    );
				    "& TableName & " 
				    | where created_at_ist >= datetime('"& StartOfTodayFormatted &"') 
				    | where  created_at_ist <= datetime('"& CurrentDateTimeFormatted &"')
				    | where updated_at_ist <= datetime('"& CurrentDateTimeFormatted &"')
				      and ((hasAllAccess > 0) or (city in (userCities)))
				            " & CombinedFilters & " 
				    | extend counter = case(order_level != 'ORDER_LEVEL_LEAF' or isempty(order_level), 1, 0) 
				    | where dp_order_type == 'INSTAMART' and (status == 'DELIVERY_DELIVERED' or status == 'COMPLETED')
				    | summarize sum(gmv) by city, region, zone, store_id, delivery_type, delivery_slot",
				
				    Source = AzureDataExplorer.Contents(Cluster, DB, Query, [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]),
				    #"Renamed Columns" = Table.RenameColumns(Source,{{"city", "City"}, {"region", "Region"}, {"zone", "Zone"}, {"store_id", "Store ID"}, {"delivery_type", "Delivery Type"}, {"delivery_slot", "Delivery Slot"}})
				in
				    #"Renamed Columns"
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

