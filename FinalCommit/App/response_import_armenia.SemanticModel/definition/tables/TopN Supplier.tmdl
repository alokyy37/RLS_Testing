table 'TopN Supplier'
	lineageTag: da9e7d53-9af1-4a71-b15d-2620d2bede79

	measure 'Supplier_Name Rank by' =
			
			IF(SELECTEDVALUE(Data[Value4]) = "Quantity",RANKX(ALL('Armenia Import'[SUPPLIER_NAME_EN]), [Total Quantity] , , DESC,Dense),
			IF(SELECTEDVALUE(Data[Value4]) = "Records", RANKX(ALL('Armenia Import'[SUPPLIER_NAME_EN]), [Total Records] , , DESC,Dense),
			RANKX(ALL('Armenia Import'[SUPPLIER_NAME_EN]), [Total Value] , , DESC,Dense) ))
		formatString: 0
		lineageTag: c0352f2b-f1a1-4b81-9629-bcccd46242ff

	measure 'TOPN Supplier Rank' =
			
			IF('TopN Supplier'[Supplier_Name Rank by]<=SELECTEDVALUE('TopN Supplier'[Value]),1,0)
		formatString: 0
		lineageTag: b6f5e8be-7c14-461b-8a94-3a2de9b91aaa

	measure 'Title Supplier' = Selectedvalue('TopN Supplier'[Metric]) & " Suppliers by " & SELECTEDVALUE(Data[Value4])
		lineageTag: c35b8a6f-c64b-4e9e-845d-b7c38425b3ee

	column Value
		dataType: int64
		formatString: 0
		lineageTag: a036b35e-a3ad-4074-9253-e77b2224d995
		summarizeBy: sum
		sourceColumn: Value

		annotation SummarizationSetBy = Automatic

	column Metric
		dataType: string
		lineageTag: d7f9e11c-691c-460e-85fd-103e7c2a611a
		summarizeBy: none
		sourceColumn: Metric

		annotation SummarizationSetBy = Automatic

	partition 'TopN Supplier' = m
		mode: import
		source =
				let
				    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i45WMjRQ0lEK8Q9QADJidYB8UxjfFMw3gskDGbGxAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Value = _t, Metric = _t]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"Value", Int64.Type}})
				in
				    #"Changed Type"

	annotation PBI_ResultType = Table

