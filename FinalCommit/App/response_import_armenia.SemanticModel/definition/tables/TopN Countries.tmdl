table 'TopN Countries'
	lineageTag: 4f592a98-2974-474a-a12f-1937ffeaa406

	measure 'Origin_Country Rank by' =
			
			IF(SELECTEDVALUE(Data[Value4]) = "Quantity",RANKX(ALL('Armenia Import'[ORIGIN_COUNTRY]), [Total Quantity] , , DESC,Dense),
			IF(SELECTEDVALUE(Data[Value4]) = "Records", RANKX(ALL('Armenia Import'[ORIGIN_COUNTRY]), [Total Records] , , DESC,Dense),
			RANKX(ALL('Armenia Import'[ORIGIN_COUNTRY]), [Total Value] , , DESC,Dense) ))
		formatString: 0
		lineageTag: 646b7e10-b0d2-40aa-bf38-35f60eb3102d

	measure 'TOPN Countries_Rank' =
			
			IF('TopN Countries'[Origin_Country Rank by]<=SELECTEDVALUE('TopN Countries'[Value]),1,0)
		formatString: 0
		lineageTag: d426f1d8-4465-40ba-9496-e33b98f384a2

	measure 'Title Countries' = Selectedvalue('TopN Countries'[Metric]) & " Origin Countries by " & SELECTEDVALUE(Data[Value4])
		lineageTag: 0f45d0ff-90b9-4286-8e53-6af65c8b266b

	column Value
		dataType: int64
		formatString: 0
		lineageTag: 1693930c-85e2-4274-a22f-af0fc00e6b55
		summarizeBy: sum
		sourceColumn: Value

		annotation SummarizationSetBy = Automatic

	column Metric
		dataType: string
		lineageTag: 26be02cc-9426-4a21-bab0-5cf9db98b130
		summarizeBy: none
		sourceColumn: Metric

		annotation SummarizationSetBy = Automatic

	partition 'TopN Countries' = m
		mode: import
		source =
				let
				    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i45WMjRQ0lEK8Q9QADJidYB8UxjfFMw3gskDGbGxAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Value = _t, Metric = _t]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"Value", Int64.Type}})
				in
				    #"Changed Type"

	annotation PBI_ResultType = Table

	annotation PBI_NavigationStepName = Navigation

