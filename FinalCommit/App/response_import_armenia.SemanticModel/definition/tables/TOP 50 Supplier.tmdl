table 'TOP 50 Supplier'
	lineageTag: 8340017b-40af-4091-9681-c088e4fe652e

	measure 'Supplier Rank by Value' =
			
			IF(SELECTEDVALUE(Data[Value4]) = "Quantity",RANKX(ALL('Armenia Import'[SUPPLIER_NAME_EN]), [Total Quantity] , , DESC,Dense),
			IF(SELECTEDVALUE(Data[Value4]) = "Records", RANKX(ALL('Armenia Import'[SUPPLIER_NAME_EN]), [Total Records] , , DESC,Dense),
			RANKX(ALL('Armenia Import'[SUPPLIER_NAME_EN]), [Total Value] , , DESC,Dense) ))
		formatString: 0
		lineageTag: 854f28c8-2cd1-4f81-8194-16944be38655

	measure 'Supplier_Top50 Title' = Selectedvalue('TOP 50 Supplier'[Metric]) & " Suppliers by " & SELECTEDVALUE(Data[Value4])
		lineageTag: f6cf3fc4-ae12-406b-bb77-155ee8182a76

	measure 'TOP50 Supplier Rank' =
			
			IF('TOP 50 Supplier'[Supplier Rank by Value]<=SELECTEDVALUE('TOP 50 Supplier'[Value]),1,0)
		formatString: 0
		lineageTag: 43451e01-7424-448a-8b16-fa1b02d28143

	column Value
		dataType: int64
		formatString: 0
		lineageTag: d3d7a208-351a-4fff-bdc0-f523f6ad6529
		summarizeBy: sum
		sourceColumn: Value

		annotation SummarizationSetBy = Automatic

	column Metric
		dataType: string
		lineageTag: 9a133b17-6239-4d84-a1c2-024f2bc7c11e
		summarizeBy: none
		sourceColumn: Metric

		annotation SummarizationSetBy = Automatic

	partition 'TOP 50 Supplier' = m
		mode: import
		source =
				let
				    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i45WMjJQ0lEK8Q9QADJidaKVjGF8YwjfBMY3gfBNYXwgIzYWAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Value = _t, Metric = _t]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"Value", Int64.Type}, {"Metric", type text}})
				in
				    #"Changed Type"

	changedProperty = Name

	annotation PBI_ResultType = Table

