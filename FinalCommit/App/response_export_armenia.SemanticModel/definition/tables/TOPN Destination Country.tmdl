table 'TOPN Destination Country'
	lineageTag: 65e74bb6-ff39-461c-9a5e-5b855ab2144d

	measure 'TOPN Destination_Country_Rank' =
			
			IF('TOPN Destination Country'[Destination_Country_Name Rank by]<=SELECTEDVALUE('TOPN Destination Country'[Value]),1,0)
		formatString: 0
		lineageTag: 1a4022d8-cf55-41a1-93b3-fbaaeb49bd1a

	measure 'Destination_Country_Name Rank by' = ```
			
			IF(SELECTEDVALUE(Data[Value4]) = "Quantity",RANKX(ALL('Armenia Export'[DESTINATION_COUNTRY]), [Total Quantity] , , DESC,Dense), 
			IF(SELECTEDVALUE(Data[Value4]) = "Records", RANKX(ALL('Armenia Export'[DESTINATION_COUNTRY]), [Total Records] , , DESC,Dense), 
			RANKX(ALL('Armenia Export'[DESTINATION_COUNTRY]), [Total Value] , , DESC,Dense) ))
			```
		formatString: 0
		lineageTag: 014c6917-f718-42db-a6af-3c35c2a8a79b

	measure 'Title Destination Country' = Selectedvalue('TOPN Destination Country'[Metric]) & " Destination Countries by " & SELECTEDVALUE(Data[Value4])
		lineageTag: f4beaf7b-b2eb-4224-8c61-c284e32fb56e

	column Value
		dataType: int64
		formatString: 0
		lineageTag: 339a724c-06ad-4456-a421-4172189a717e
		summarizeBy: sum
		sourceColumn: Value

		annotation SummarizationSetBy = Automatic

	column Metric
		dataType: string
		lineageTag: 50e8cd1e-14d5-4be7-b045-32e60df9b6bc
		summarizeBy: none
		sourceColumn: Metric

		annotation SummarizationSetBy = Automatic

	partition 'TOPN Destination Country' = m
		mode: import
		source =
				let
				    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i45WMjRQ0lEK8Q9QADJidYB8UxjfFMw3gskDGbGxAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Value = _t, Metric = _t]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"Value", Int64.Type}, {"Metric", type text}})
				in
				    #"Changed Type"

	annotation PBI_ResultType = Table

