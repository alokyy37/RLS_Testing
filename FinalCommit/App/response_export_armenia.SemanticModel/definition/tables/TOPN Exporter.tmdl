table 'TOPN Exporter'
	lineageTag: 4f592a98-2974-474a-a12f-1937ffeaa406

	measure 'TOPN Exporter_Rank' =
			
			IF('TOPN Exporter'[ExporterName Rank by]<=SELECTEDVALUE('TOPN Exporter'[Value]),1,0)
		formatString: 0
		lineageTag: 646b7e10-b0d2-40aa-bf38-35f60eb3102d

	measure 'ExporterName Rank by' = ```
			
			IF(SELECTEDVALUE(Data[Value4]) = "Quantity",RANKX(ALL('Armenia Export'[EXPORTER_NAME_EN]), [Total Quantity] , , DESC,Dense), 
			IF(SELECTEDVALUE(Data[Value4]) = "Records", RANKX(ALL('Armenia Export'[EXPORTER_NAME_EN]), [Total Records] , , DESC,Dense), 
			RANKX(ALL('Armenia Export'[EXPORTER_NAME_EN]), [Total Value] , , DESC,Dense) ))
			```
		formatString: 0
		lineageTag: 2badbe8d-a444-4fdf-8c99-387292663f5f

	measure 'Title Exporter' = Selectedvalue('TOPN Exporter'[Metric]) & " Exporters by " & SELECTEDVALUE(Data[Value4])
		lineageTag: 59292384-ef2e-4146-9342-aa124c480627

	column Value
		dataType: int64
		formatString: 0
		lineageTag: 6ccbb985-8645-4752-bc46-fac7585a8fd3
		summarizeBy: sum
		sourceColumn: Value

		annotation SummarizationSetBy = Automatic

	column Metric
		dataType: string
		lineageTag: 11ffad85-dea9-4fc7-8730-8455069e6309
		summarizeBy: none
		sourceColumn: Metric

		annotation SummarizationSetBy = Automatic

	partition 'TOPN Exporter' = m
		mode: import
		source =
				let
				    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i45WMjRQ0lEK8Q9QADJidYB8UxjfFMw3gskDGbGxAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Value = _t, Metric = _t]),
				    #"Changed Type1" = Table.TransformColumnTypes(Source,{{"Value", Int64.Type}})
				in
				    #"Changed Type1"

	annotation PBI_ResultType = Table

	annotation PBI_NavigationStepName = Navigation

