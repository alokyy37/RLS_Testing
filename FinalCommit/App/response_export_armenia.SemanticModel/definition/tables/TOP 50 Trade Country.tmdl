table 'TOP 50 Trade Country'
	lineageTag: f4c40418-f9cb-40ad-a9b1-d519131775c2

	measure 'Trade_Country Rank by Value' = ```
			
			IF(SELECTEDVALUE(Data[Value4]) = "Quantity",RANKX(ALL('Armenia Export'[TRADE_COUNTRY]), [Total Quantity] , , DESC,Dense), 
			IF(SELECTEDVALUE(Data[Value4]) = "Records", RANKX(ALL('Armenia Export'[TRADE_COUNTRY]), [Total Records] , , DESC,Dense), 
			RANKX(ALL('Armenia Export'[TRADE_COUNTRY]), [Total Value] , , DESC,Dense) ))
			```
		formatString: 0
		lineageTag: 3c941251-b4e7-452e-bba1-c568dd58328c

	measure 'TOP50 Office_Port Rank' =
			
			IF('TOP 50 Trade Country'[Trade_Country Rank by Value]<=SELECTEDVALUE('TOP 50 Trade Country'[Value]),1,0)
		formatString: 0
		lineageTag: b846b565-d59c-4f05-a6ba-10d9c2a2d1d4

	measure Title_Foreign_Port = Selectedvalue('TOP 50 Trade Country'[Metric]) & " Foreign Ports by " & SELECTEDVALUE(Data[Value4])
		lineageTag: 8de49973-2706-4292-a118-79773c68ffb5

	column Value
		dataType: int64
		formatString: 0
		lineageTag: e38b10b2-e32a-4fc2-bc1d-e88277b0e7dd
		summarizeBy: sum
		sourceColumn: Value

		annotation SummarizationSetBy = Automatic

	column Metric
		dataType: string
		lineageTag: 500ad8bb-1e25-4fa6-9ffa-ba023b22fc02
		summarizeBy: none
		sourceColumn: Metric

		annotation SummarizationSetBy = Automatic

	partition 'TOP 50 Trade Country' = m
		mode: import
		source =
				let
				    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i45WMjJQ0lEK8Q9QADJidaKVjGF8YwjfBMY3gfBNYXwgIzYWAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Value = _t, Metric = _t]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"Value", Int64.Type}, {"Metric", type text}})
				in
				    #"Changed Type"

	changedProperty = Name

	annotation PBI_ResultType = Table

