table 'TOPN Foreign Port'
	lineageTag: 60e6edd7-fe18-4e2d-9f82-b038349eb5b5

	measure 'TOPN Office_Port_Rank' =
			
			IF('TOPN Foreign Port'[Foreign_Port_Name Rank by]<=SELECTEDVALUE('TOPN Foreign Port'[Value]),1,0)
		formatString: 0
		lineageTag: be787377-190c-4e53-a63c-e3b61209bec9

	measure 'Foreign_Port_Name Rank by' = ```
			
			IF(SELECTEDVALUE(Data[Value4]) = "Quantity",RANKX(ALL('Armenia Export'[FOREIGN_PORT]), [Total Quantity] , , DESC,Dense), 
			IF(SELECTEDVALUE(Data[Value4]) = "Records", RANKX(ALL('Armenia Export'[FOREIGN_PORT]), [Total Records] , , DESC,Dense), 
			RANKX(ALL('Armenia Export'[FOREIGN_PORT]), [Total Value] , , DESC,Dense) ))
			```
		formatString: 0
		lineageTag: 58d31da8-3aea-413f-b207-7764f24e0c19

	measure 'Title Foreign_Port' = Selectedvalue('TOPN Foreign Port'[Metric]) & " Foreign Ports by " & SELECTEDVALUE(Data[Value4])
		lineageTag: 9ca5aa16-39aa-4ea0-a6ee-989f848d7270

	column Value
		dataType: int64
		formatString: 0
		lineageTag: 6326a0a1-0607-4430-8f33-6a0731e1a6c1
		summarizeBy: sum
		sourceColumn: Value

		annotation SummarizationSetBy = Automatic

	column Metric
		dataType: string
		lineageTag: 9709b4e9-a98e-4104-83ac-f64f462a8bb5
		summarizeBy: none
		sourceColumn: Metric

		annotation SummarizationSetBy = Automatic

	partition 'TOPN Foreign Port' = m
		mode: import
		source =
				let
				    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i45WMjRQ0lEK8Q9QADJidYB8UxjfFMw3gskDGbGxAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Value = _t, Metric = _t]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"Value", Int64.Type}, {"Metric", type text}})
				in
				    #"Changed Type"

	changedProperty = Name

	annotation PBI_ResultType = Table

