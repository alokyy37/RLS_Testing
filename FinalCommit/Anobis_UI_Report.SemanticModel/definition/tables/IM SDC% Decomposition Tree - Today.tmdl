table 'IM SDC% Decomposition Tree - Today'
	lineageTag: 650a038f-5c90-4c8d-9dcf-6159b9b48493

	column city
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: 6703b421-3e93-46cb-ab76-0bfea7f14619
		summarizeBy: none
		sourceColumn: city

		annotation SummarizationSetBy = Automatic

	column region
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: 88700558-d549-4db0-bb6c-d156ebe0d339
		summarizeBy: none
		sourceColumn: region

		annotation SummarizationSetBy = Automatic

	column zone
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: bc76155d-bbc1-4c4f-ae01-fd8676bbeac7
		summarizeBy: none
		sourceColumn: zone

		annotation SummarizationSetBy = Automatic

	column store_id
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: 70821a7d-92c8-4b8f-a1a9-578f46a6fd68
		summarizeBy: none
		sourceColumn: store_id

		annotation SummarizationSetBy = Automatic

	column delivery_type
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: b297184f-771e-491c-983b-4c4e4873c72f
		summarizeBy: none
		sourceColumn: delivery_type

		annotation SummarizationSetBy = Automatic

	column delivery_slot
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: efe4c91b-adf3-43c1-b43c-9f0e364a538a
		summarizeBy: none
		sourceColumn: delivery_slot

		annotation SummarizationSetBy = Automatic

	column SDC%
		dataType: double
		sourceProviderType: double
		lineageTag: 24d5aa5c-d736-41ed-9c9d-344d92a526a2
		summarizeBy: sum
		sourceColumn: SDC%

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	partition 'IM SDC% Decomposition Tree - Today' = m
		mode: directQuery
		queryGroup: IM\IM-Today\IM-Cancellation\IM-SDC
		source = ```
				let
				    // Get current date and time in UTC
				    TodayDateTimeZone = DateTimeZone.UtcNow(),
				
				    // Convert UTC time to IST
				    TodaysDateTime = TodayDateTimeZone + #duration(0, 5, 30, 0),
				
				    TodaysTime = Time.ToText(DateTime.Time(TodaysDateTime), "HH:mm:ss"),
				
				    StartOfToday = DateTime.FromText(Date.ToText(DateTime.Date(TodaysDateTime)) & " 00:00:00"),
				
				    // // // Format the start and end dates to yyyy-MM-dd HH:mm:ss format
				    StartOfTodayFormatted = DateTime.ToText(StartOfToday, "yyyy-MM-dd HH:mm:ss"),
				    CurrentDateTime = DateTime.FromText(Date.ToText(DateTime.Date(TodaysDateTime)) & " " & TodaysTime),
				    CurrentDateTimeFormatted = DateTime.ToText(CurrentDateTime, "yyyy-MM-dd HH:mm:ss"),
				
				    // Reference the Table Name parameter dynamically
				    TableName = IMTableName,
				    
				    // Reference all dynamic parameters
				    IMCityParam = if Value.Is(IM_City_Parameter, type list) then IM_City_Parameter else {IM_City_Parameter},
				    RegionParam = if Value.Is(Region_Parameter, type list) then Region_Parameter else {Region_Parameter},
				    ZoneParam = if Value.Is(Zone_Parameter, type list) then Zone_Parameter else {Zone_Parameter},
				    StoreIDParam = if Value.Is(StoreID_Parameter, type list) then StoreID_Parameter else {StoreID_Parameter},
				    DeliveryTypeParam = if Value.Is(DeliveryType_Parameter, type list) then DeliveryType_Parameter else {DeliveryType_Parameter},
				    DeliverySlotParam = if Value.Is(DeliverySlot_Parameter, type list) then DeliverySlot_Parameter else {DeliverySlot_Parameter},
				
				    // BUild Dynamic Conditions
				    IMCityCondition = if List.NonNullCount(IMCityParam) > 0 then " | where city in (" & Text.Combine(List.Transform(IMCityParam, each "'" & _ & "'"), ", ") & ")" else "",
				    RegionCondition = if List.NonNullCount(RegionParam) > 0 then " | where region in (" & Text.Combine(List.Transform(RegionParam, each "'" & _ & "'"), ", ") & ")" else "",
				    ZoneCondition = if List.NonNullCount(ZoneParam) > 0 then " | where zone in (" & Text.Combine(List.Transform(ZoneParam, each "'" & _ & "'"), ", ") & ")" else "",
				    StoreIDCondition = if List.NonNullCount(StoreIDParam) > 0 then " | where store_id in (" & Text.Combine(List.Transform(StoreIDParam, each "'" & _ & "'"), ", ") & ")" else "",
				    DeliveryTypeCondition = if List.NonNullCount(DeliveryTypeParam) > 0 then " | where delivery_type in (" & Text.Combine(List.Transform(DeliveryTypeParam, each "'" & _ & "'"), ", ") & ")" else "",
				    DeliverySlotCondition = if List.NonNullCount(DeliverySlotParam) > 0 then " | where delivery_slot in (" & Text.Combine(List.Transform(DeliverySlotParam, each "'" & _ & "'"), ", ") & ")" else "",
				     
				    // Combine All Filters
				    CombinedFilters = IMCityCondition & RegionCondition & ZoneCondition & StoreIDCondition & DeliveryTypeCondition & DeliverySlotCondition,
				
				    // Format the query with dynamic start and end times for yesterday in IST
				     Query = "let currentUser = current_principal_details()['UserPrincipalName'];
				    let userCities = toscalar(
				        Anobis_RLS_MV
				        | where UserEmail_ID == currentUser
				        | summarize make_list(city)
				    );
				    let hasAllAccess = toscalar(
				        Anobis_RLS_MV
				        | where UserEmail_ID == currentUser and city == 'cities'
				        | count
				    );
				    "&  TableName & " 
				        |where created_at_ist >= datetime('"& StartOfTodayFormatted &"') 
				        |where created_at_ist <= datetime('"& CurrentDateTimeFormatted &"')
				        | where updated_at_ist <= datetime('"& CurrentDateTimeFormatted &"')   
				      and ((hasAllAccess > 0) or (city in (userCities)))
				            " & CombinedFilters & "
				            and dp_order_type == 'INSTAMART'
				        | extend sdc_cancelled = iff(cancel_type == 'CANCEL_TYPE_SWIGGY_DRIVEN_CANCELLATION', 1.0, 0.0)
				        | extend delivered = iff(status == 'COMPLETED', 1.0, 0.0)
				        | summarize
				            SDCCount = sum(sdc_cancelled),
				            DeliveredDistinctCount = dcount(iff(status == 'COMPLETED', order_id, ''))
				            by city, region, zone,store_id, delivery_type, delivery_slot  // Group by city, region, and zone
				        | extend ['SDC%']=round(iff(DeliveredDistinctCount == 0, 0.0, 100.0 * SDCCount / DeliveredDistinctCount), 2)
				        | project city, region, zone,store_id, delivery_type, delivery_slot,['SDC%']
				        | order by city, region, zone,store_id, delivery_type, delivery_slot  // Optional: Order by zone, then region, then city",
				        
				    // // Get data from Azure Data Explorer with the dynamic query
				    Source = AzureDataExplorer.Contents(Cluster, DB, Query, [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null])
				in
				    Source
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

