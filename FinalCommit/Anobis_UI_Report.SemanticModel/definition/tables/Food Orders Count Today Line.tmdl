table 'Food Orders Count Today Line'
	lineageTag: 758265a6-011d-4b99-94a6-fdca766c5279

	column created_on_ist
		dataType: dateTime
		formatString: Long Time
		sourceProviderType: datetime2
		lineageTag: d17e8710-e544-421e-824f-51a7847ac6c3
		summarizeBy: none
		sourceColumn: created_on_ist

		annotation SummarizationSetBy = Automatic

	column COUNT_id
		dataType: int64
		formatString: 0
		sourceProviderType: bigint
		lineageTag: f11594c8-c7d0-40f9-ac1a-4620be1d89ae
		summarizeBy: sum
		sourceColumn: COUNT_id

		annotation SummarizationSetBy = Automatic

	column label
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: 3045fc01-a236-439b-8a44-fb76a3dc0f18
		summarizeBy: none
		sourceColumn: label

		annotation SummarizationSetBy = Automatic

	partition 'Food Orders Count Today Line' = m
		mode: directQuery
		queryGroup: 'Food\Food-Today\Food- Sales\Food- Completed Orders'
		source = ```
				let
				    // Get current date and time in UTC
				    TodayDateTimeZone = DateTimeZone.UtcNow(),
				
				    // Convert UTC time to IST
				    TodaysDateTime = TodayDateTimeZone + #duration(0, 5, 30, 0),
				
				    TodaysTime = Time.ToText(DateTime.Time(TodaysDateTime), "HH:mm:ss"),
				
				    StartOfToday = DateTime.FromText(Date.ToText(DateTime.Date(TodaysDateTime)) & " 00:00:00"),
				
				    // // // Format the start and end dates to yyyy-MM-dd HH:mm:ss format
				    StartOfTodayFormatted = DateTime.ToText(StartOfToday, "yyyy-MM-dd HH:mm:ss"),
				    CurrentDateTime = DateTime.FromText(Date.ToText(DateTime.Date(TodaysDateTime)) & " " & TodaysTime),
				    CurrentDateTimeFormatted = DateTime.ToText(CurrentDateTime, "yyyy-MM-dd HH:mm:ss"),
				
				    // Get Last 7 days's time
				    LastWeekDateTime = TodaysDateTime - #duration(7, 0, 0, 0),
				    LastWeeksTime = Time.ToText(DateTime.Time(LastWeekDateTime), "HH:mm:ss"),
				    StartOfLastWeek = DateTime.FromText(Date.ToText(DateTime.Date(LastWeekDateTime)) & " 00:00:00"),
				    StartOfLastWeekFormatted = DateTime.ToText(StartOfLastWeek, "yyyy-MM-dd HH:mm:ss"),
				    LastWeekCurrentDateTime = DateTime.FromText(Date.ToText(DateTime.Date(LastWeekDateTime)) & " " & LastWeeksTime),
				    LastWeekCurrentDateTimeFormatted = DateTime.ToText(LastWeekCurrentDateTime, "yyyy-MM-dd HH:mm:ss"),
				
				    // // Reference the Table Name parameter dynamically
				    TableName = FoodTableName,
				      // Reference all dynamic parameters
				    CityParam = if Value.Is(City_Parameter, type list) then City_Parameter else {City_Parameter},
				    AreaParam = if Value.Is(Area_Parameter, type list) then Area_Parameter else {Area_Parameter},
				    BUParam = if Value.Is(BusinessUnit_Parameter, type list) then BusinessUnit_Parameter else {BusinessUnit_Parameter},
				    BCParam = if Value.Is(BusinessClassifier_Parameter, type list) then BusinessClassifier_Parameter else {BusinessClassifier_Parameter},
				    TimeSlotParam = if Value.Is(TimeSlot_Parameter, type list) then TimeSlot_Parameter else {TimeSlot_Parameter},
				
				    // Build Dynamic Conditions
				    CityCondition = if List.NonNullCount(CityParam) > 0 then " | where city in (" & Text.Combine(List.Transform(CityParam, each "'" & _ & "'"), ", ") & ")" else "",
				    AreaCondition = if List.NonNullCount(AreaParam) > 0 then " | where area in (" & Text.Combine(List.Transform(AreaParam, each "'" & _ & "'"), ", ") & ")" else "",
				    BUCondition = if List.NonNullCount(BUParam) > 0 then " | where business_unit in (" & Text.Combine(List.Transform(BUParam, each "'" & _ & "'"), ", ") & ")" else "",
				    BCCondition = if List.NonNullCount(BCParam) > 0 then " | where business_classifier in (" & Text.Combine(List.Transform(BCParam, each "'" & _ & "'"), ", ") & ")" else "",
				    TimeSlotCondition = if List.NonNullCount(TimeSlotParam) > 0 then " | where time_slot in (" & Text.Combine(List.Transform(TimeSlotParam, each "'" & _ & "'"), ", ") & ")" else "",
				
				
				    // Combine All Filters
				    CombinedFilters = CityCondition & AreaCondition & BUCondition & BCCondition & TimeSlotCondition,
				
				    // // Format the query with dynamic start and end times for yesterday in IST
				//  Query = "let today = " & TableName & " 
				// | where created_on_ist >= datetime('"& StartOfTodayFormatted &"') 
				// | where created_on_ist <= datetime('"& CurrentDateTimeFormatted &"')
				// | where updated_on_ist <= datetime('"& CurrentDateTimeFormatted &"')  
				// | where order_status == 'completed' and order_type != 'SUBSCRIPTION' 
				//     "& CombinedFilters &"
				// | summarize COUNT_id = count() by bin(created_on_ist, 1h)
				// | extend today='Today'
				// | project COUNT_id, created_on_ist, today;
				// let last_week = " & TableName & " 
				// | where created_on_ist >= datetime('"& StartOfLastWeekFormatted &"') 
				// | where created_on_ist <= datetime('"& LastWeekCurrentDateTimeFormatted &"') 
				// | where updated_on_ist <= datetime('"& LastWeekCurrentDateTimeFormatted &"') 
				// | where order_status == 'completed' and order_type != 'SUBSCRIPTION' 
				//     "& CombinedFilters &"
				// | extend created_on_ist = datetime_add('hour', 168, created_on_ist)
				// | summarize COUNT_id = count() by bin(created_on_ist, 1h)
				// | extend today='SDLW'
				// | project COUNT_id, created_on_ist, today;
				// today
				// | union last_week",
				
				
				// Define date ranges (replace these with your M-query dynamic variables as needed)
				Query = "let currentUser = current_principal_details()['UserPrincipalName'];
				    let userCities = toscalar(
					Anobis_RLS_MV
				        | where UserEmail_ID == currentUser
				        | summarize make_list(city)
				    );
				    let hasAllAccess = toscalar(
				        Anobis_RLS_MV
				        | where UserEmail_ID == currentUser and city == 'cities'
				        | count
				    );
				let today_start = datetime('"& StartOfTodayFormatted &"');
				let today_end = datetime('"& CurrentDateTimeFormatted &"');
				let last_week_start = datetime('"& StartOfLastWeekFormatted &"');
				let last_week_end = datetime('"& LastWeekCurrentDateTimeFormatted &"');
				let today = " & TableName & " 
				| where created_on_ist between (today_start .. today_end)
				| where updated_on_ist <= today_end
				      and ((hasAllAccess > 0) or (city in (userCities)))
				| where order_status == 'completed' and order_type != 'SUBSCRIPTION'
				    "& CombinedFilters &"
				| summarize COUNT_id = count() by bin(created_on_ist, 1h)
				| extend label = 'Today';
				let last_week = " & TableName & " 
				| where created_on_ist between (last_week_start .. last_week_end)
				| where updated_on_ist <= last_week_end
				      and ((hasAllAccess > 0) or (city in (userCities)))
				| where order_status == 'completed' and order_type != 'SUBSCRIPTION' 
				    "& CombinedFilters &"
				| extend created_on_ist = datetime_add('hour', 168, created_on_ist)  // shift +7 days for comparison
				| summarize COUNT_id = count() by bin(created_on_ist, 1h)
				| extend label = 'Last Week';
				today
				| union last_week
				| project COUNT_id, created_on_ist, label
				| order by created_on_ist asc",
				
				    // // Get data from Azure Data Explorer with the dynamic query
				    Source = AzureDataExplorer.Contents(Cluster, DB, Query, [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]),
				     #"Changed Type" = Table.TransformColumnTypes(Source,{{"created_on_ist", type datetime}})
				in
				    #"Changed Type"
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

