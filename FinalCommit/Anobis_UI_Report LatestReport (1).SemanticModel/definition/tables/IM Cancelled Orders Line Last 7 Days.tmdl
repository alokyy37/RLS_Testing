table 'IM Cancelled Orders Line Last 7 Days'
	lineageTag: 1ec0071e-8eaf-4fb9-9a29-31845c2796d6

	column COUNT_id
		dataType: int64
		formatString: 0
		sourceProviderType: bigint
		lineageTag: fc51bc68-454f-4093-bcb5-cda66880e464
		summarizeBy: sum
		sourceColumn: COUNT_id

		annotation SummarizationSetBy = Automatic

	column created_at_ist
		dataType: dateTime
		formatString: General Date
		sourceProviderType: datetime2
		lineageTag: 057a9137-0b9b-4102-985b-35cf3c83fbc0
		summarizeBy: none
		sourceColumn: created_at_ist

		annotation SummarizationSetBy = Automatic

	column time_period
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: 49000b3d-883e-4bbc-bab6-ed7a1ff9e739
		summarizeBy: none
		sourceColumn: time_period

		annotation SummarizationSetBy = Automatic

	column 'Day of Week'
		dataType: int64
		isNullable: false
		formatString: 0
		sourceProviderType: bigint
		lineageTag: cf9e3e1b-fbbb-44a6-a18d-32c0d58ae797
		summarizeBy: sum
		sourceColumn: Day of Week

		annotation SummarizationSetBy = Automatic

	column Week
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: 9920cfb7-b329-4170-8f34-f874b087c2ac
		summarizeBy: none
		sourceColumn: Week
		sortByColumn: created_at_ist

		changedProperty = SortByColumn

		annotation SummarizationSetBy = Automatic

	partition 'IM Cancelled Orders Line Last 7 Days' = m
		mode: directQuery
		queryGroup: 'IM\IM-Last 7 Days\IM-Cancellation\IM-Cancelled Orders'
		source = ```
				let
				    // Get current date and time in UTC
				TodayDateTimeZone = DateTimeZone.UtcNow(),
				
				// Convert UTC time to IST (Indian Standard Time, UTC +5:30)
				TodaysDateTime = TodayDateTimeZone + #duration(0, 5, 30, 0),
				
				// Get today's date in IST (removes the time part)
				
				TodaysTime = Time.ToText(DateTime.Time(TodaysDateTime), "HH:mm:ss"),
				
				TodayDate = DateTime.Date(TodaysDateTime),
				
				// Get the date 7 days ago in IST
				Last7Days = TodayDate - #duration(7, 0, 0, 0),
				
				// Last 7 days current week to 12:00 AM IST
				StartOfLast7Days = DateTime.FromText(Date.ToText(Last7Days) & " 00:00:00"),
				StartOfLast7DaysFormatted = DateTime.ToText(StartOfLast7Days, "yyyy-MM-dd HH:mm:ss"),
				CurrentDate = DateTime.FromText(Date.ToText(DateTime.Date(TodaysDateTime)) &  " 00:00:00"),
				EndofCurrentDateFormatted = DateTime.ToText(CurrentDate, "yyyy-MM-dd HH:mm:ss"),
				
				// Last 7 days previous week to 12:00 AM IST
				LastWeekStartDateTime = StartOfLast7Days - #duration(7, 0, 0, 0),
				StartOfLastWeek = DateTime.FromText(Date.ToText(DateTime.Date(LastWeekStartDateTime)) & " 00:00:00"),
				StartOfLastWeekFormatted = DateTime.ToText(StartOfLastWeek, "yyyy-MM-dd HH:mm:ss"),
				EndofLastWeekFormatted = StartOfLast7DaysFormatted,
				    // Reference the table name via parameter
				    TableName = IMTableName,
				      // Reference all dynamic parameters
				    IMCityParam = if Value.Is(IM_City_Parameter, type list) then IM_City_Parameter else {IM_City_Parameter},
				    RegionParam = if Value.Is(Region_Parameter, type list) then Region_Parameter else {Region_Parameter},
				    ZoneParam = if Value.Is(Zone_Parameter, type list) then Zone_Parameter else {Zone_Parameter},
				    StoreIDParam = if Value.Is(StoreID_Parameter, type list) then StoreID_Parameter else {StoreID_Parameter},
				    DeliveryTypeParam = if Value.Is(DeliveryType_Parameter, type list) then DeliveryType_Parameter else {DeliveryType_Parameter},
				    DeliverySlotParam = if Value.Is(DeliverySlot_Parameter, type list) then DeliverySlot_Parameter else {DeliverySlot_Parameter},
				
				    // BUild Dynamic Conditions
				    IMCityCondition = if List.NonNullCount(IMCityParam) > 0 then " | where city in (" & Text.Combine(List.Transform(IMCityParam, each "'" & _ & "'"), ", ") & ")" else "",
				    RegionCondition = if List.NonNullCount(RegionParam) > 0 then " | where region in (" & Text.Combine(List.Transform(RegionParam, each "'" & _ & "'"), ", ") & ")" else "",
				    ZoneCondition = if List.NonNullCount(ZoneParam) > 0 then " | where zone in (" & Text.Combine(List.Transform(ZoneParam, each "'" & _ & "'"), ", ") & ")" else "",
				    StoreIDCondition = if List.NonNullCount(StoreIDParam) > 0 then " | where store_id in (" & Text.Combine(List.Transform(StoreIDParam, each "'" & _ & "'"), ", ") & ")" else "",
				    DeliveryTypeCondition = if List.NonNullCount(DeliveryTypeParam) > 0 then " | where delivery_type in (" & Text.Combine(List.Transform(DeliveryTypeParam, each "'" & _ & "'"), ", ") & ")" else "",
				    DeliverySlotCondition = if List.NonNullCount(DeliverySlotParam) > 0 then " | where delivery_slot in (" & Text.Combine(List.Transform(DeliverySlotParam, each "'" & _ & "'"), ", ") & ")" else "",
				    
				    // Combine All Filters
				    CombinedFilters = IMCityCondition & RegionCondition & ZoneCondition & StoreIDCondition & DeliveryTypeCondition & DeliverySlotCondition,
				    
				    //KQL Query
				    Query = "    let currentUser = current_principal_details()['UserPrincipalName'];
				    let userCities = toscalar(
				        Anobis_RLS_MV
				        | where UserEmail_ID == currentUser
				        | summarize make_list(city)
				    );
				    let hasAllAccess = toscalar(
				        Anobis_RLS_MV
				        | where UserEmail_ID == currentUser and city == 'cities'
				        | count
				    );
				    let current_week = " & TableName & " 
				    | where created_at_ist >= datetime('"& StartOfLast7DaysFormatted &"') 
				    | where created_at_ist < datetime('"& EndofCurrentDateFormatted &"')
				      and ((hasAllAccess > 0) or (city in (userCities)))
				    " & CombinedFilters & " 
				    | where dp_order_type == 'INSTAMART' and status == 'CANCELLED' 
				    and (order_level != 'ORDER_LEVEL_LEAF' or isempty(order_level))
				    | summarize COUNT_id = count() by bin(created_at_ist, 1d)
				    | extend time_period='Daily Trend'
				    | project COUNT_id, created_at_ist, time_period;
				    let last_week = " & TableName & "
				    | where created_at_ist >= datetime('"& StartOfLastWeekFormatted &"') 
				    | where created_at_ist < datetime('" & EndofLastWeekFormatted &" ') 
				      and ((hasAllAccess > 0) or (city in (userCities)))
				    " & CombinedFilters & "
				    | where dp_order_type == 'INSTAMART' and status == 'CANCELLED' 
				    and (order_level != 'ORDER_LEVEL_LEAF' or isempty(order_level))
				    | extend created_at_ist = datetime_add('hour', 168, created_at_ist)
				    | summarize COUNT_id = count() by bin(created_at_ist, 1d)
				    | extend time_period='1 Week Ago'
				    | project COUNT_id, created_at_ist, time_period;
				    current_week
				    | union last_week",
				    // Get data from Azure Data Explorer with the dynamic query
				    Source = AzureDataExplorer.Contents(Cluster,DB, Query, [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]),
				   #"Inserted Day of Week" = Table.AddColumn(Source, "Day of Week", each Date.DayOfWeek([created_at_ist]), Int64.Type),
				    #"Added Conditional Column" = Table.AddColumn(#"Inserted Day of Week", "Week", each if [Day of Week] = 1 then "Mon" else if [Day of Week] = 2 then "Tue" else if [Day of Week] = 3 then "Wed" else if [Day of Week] = 4 then "Thur" else if [Day of Week] = 5 then "Fri" else if [Day of Week] = 6 then "Sat" else if [Day of Week] = 0 then "Sun" else null),
				    #"Changed Type" = Table.TransformColumnTypes(#"Added Conditional Column",{{"created_at_ist", type datetime}, {"Week", type text}})
				in
				    #"Changed Type"
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

