table 'TopN Importer'
	lineageTag: 609b3729-0c9c-46da-a2e9-5a03645cc468

	measure 'Title Importer' = Selectedvalue('TopN Importer'[Metric]) & " Importers by " & SELECTEDVALUE(Data[Value4])
		lineageTag: d616f561-b28c-48fe-bc8c-e93a3b64c343

	measure 'TOPN Importer_Rank' =
			
			IF('TopN Importer'[ImporterName Rank by]<=SELECTEDVALUE('TopN Importer'[Value]),1,0)
		formatString: 0
		lineageTag: 33bb9597-186a-443f-b6f7-a7cb9fa3a6a5

	measure 'ImporterName Rank by' =
			
			IF(SELECTEDVALUE(Data[Value4]) = "Quantity",RANKX(ALL('Armenia Import'[IMPORTER_NAME_EN]), [Total Quantity] , , DESC,Dense),
			IF(SELECTEDVALUE(Data[Value4]) = "Records", RANKX(ALL('Armenia Import'[IMPORTER_NAME_EN]), [Total Records] , , DESC,Dense),
			RANKX(ALL('Armenia Import'[IMPORTER_NAME_EN]), [Total Value] , , DESC,Dense) ))
		formatString: 0
		lineageTag: 3eb08494-f32a-452f-b109-8201136b36c6

	column Value
		dataType: int64
		formatString: 0
		lineageTag: 113c5235-9127-4306-95bc-574dff9289e0
		summarizeBy: sum
		sourceColumn: Value

		annotation SummarizationSetBy = User

	column Metric
		dataType: string
		lineageTag: fee0621f-a45e-4658-a345-9d45282efdad
		summarizeBy: none
		sourceColumn: Metric

		annotation SummarizationSetBy = Automatic

	partition 'TopN Importer' = m
		mode: import
		source =
				let
				    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i45WMjRQ0lEK8Q9QADJidYB8UxjfFMw3gskDGbGxAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Value = _t, Metric = _t]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"Value", Int64.Type}, {"Metric", type text}})
				in
				    #"Changed Type"

	annotation PBI_ResultType = Table

