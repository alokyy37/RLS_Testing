table 'Food Order Count decomposition tree-Last 4 Weeks'
	lineageTag: a315cb6f-cdc0-4d05-a206-3d6746fc7079

	column city
		dataType: string
		lineageTag: ceb081a7-e244-4761-9146-47403066912e
		summarizeBy: none
		sourceColumn: city

		annotation SummarizationSetBy = Automatic

	column area
		dataType: string
		lineageTag: e71a1faf-2475-42a1-8ed4-6538ca2adaf8
		summarizeBy: none
		sourceColumn: area

		annotation SummarizationSetBy = Automatic

	column business_unit
		dataType: string
		lineageTag: 263b8b9e-64d8-4b85-9b45-f5ecfa248564
		summarizeBy: none
		sourceColumn: business_unit

		annotation SummarizationSetBy = Automatic

	column business_classifier
		dataType: string
		lineageTag: 9a46db14-948f-4688-b29f-8ea72a3454d8
		summarizeBy: none
		sourceColumn: business_classifier

		annotation SummarizationSetBy = Automatic

	column count_
		dataType: int64
		formatString: 0
		lineageTag: 16e78213-842e-487a-9180-ab6f0b374ba9
		summarizeBy: sum
		sourceColumn: count_

		annotation SummarizationSetBy = Automatic

	column time_slot
		dataType: string
		lineageTag: d3d95d6f-bdaf-42fa-bc3c-271907a90e93
		summarizeBy: none
		sourceColumn: time_slot

		annotation SummarizationSetBy = Automatic

	partition 'Food Order Count decomposition tree-Last 4 Weeks' = m
		mode: import
		queryGroup: 'Food\Food- Last 4 weeks\Food- Sales\Food-Orders'
		source = ```
				let
				 // Get current date and time in UTC
				    TodayDateTimeZone = DateTimeZone.UtcNow(),
				
				    // Convert UTC time to IST (Indian Standard Time, UTC +5:30)
				    TodaysDateTime = TodayDateTimeZone + #duration(0, 5, 30, 0),
				
				    // Get today's date in IST (removes the time part)
				
				    TodaysTime = Time.ToText(DateTime.Time(TodaysDateTime), "HH:mm:ss"),
				
				    TodayDate = DateTime.Date(TodaysDateTime),
				
				    // Get the date 28 days ago in IST
				    Last28Days = TodayDate - #duration(28, 0, 0, 0),
				
				    // Set the start of the last 28 days to 12:00 AM IST
				    StartOfLast28Days = DateTime.FromText(Date.ToText(Last28Days) & " 00:00:00"),
				    StartOfLast28DaysFormatted = DateTime.ToText(StartOfLast28Days, "yyyy-MM-dd HH:mm:ss"),
				    EndofLast28Days = DateTime.FromText(Date.ToText(DateTime.Date(TodaysDateTime)) &  " 00:00:00"),
				    EndofLast28DayFormatted = DateTime.ToText(EndofLast28Days, "yyyy-MM-dd HH:mm:ss"),
				
				    // Reference the Table Name parameter dynamically
				    TableName = FoodTableName,
				
				    // Format the query with dynamic start and end times
				    Query = TableName & " 
				    | where created_on_ist >= datetime(' " & StartOfLast28DaysFormatted & " ') 
				    | where created_on_ist < datetime(' " & EndofLast28DayFormatted & " ') 
				    | where order_status == 'completed' 
				    | where order_type != 'SUBSCRIPTION' 
				    | summarize count() by city, area, business_unit, business_classifier, time_slot",
				    // // Get data from Azure Data Explorer with the dynamic query
				    Source = AzureDataExplorer.Contents(Cluster, DB, Query, [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null])
				in
				    Source
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

