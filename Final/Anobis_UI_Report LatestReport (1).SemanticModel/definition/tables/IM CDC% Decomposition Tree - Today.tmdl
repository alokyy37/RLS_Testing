table 'IM CDC% Decomposition Tree - Today'
	lineageTag: a78f48f6-bf6c-428c-8d80-e375e47e48b7

	column city
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: 6247221c-fb25-4b4a-96dc-c953eb71deb4
		summarizeBy: none
		sourceColumn: city

		annotation SummarizationSetBy = Automatic

	column region
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: 7b8287ca-e210-4abf-a64c-9a0e9f8896a7
		summarizeBy: none
		sourceColumn: region

		annotation SummarizationSetBy = Automatic

	column zone
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: 477e917d-86cc-4e89-9890-a5d5f07dd65d
		summarizeBy: none
		sourceColumn: zone

		annotation SummarizationSetBy = Automatic

	column store_id
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: 41a220e3-f9fc-4339-98b8-cff5f0c3e373
		summarizeBy: none
		sourceColumn: store_id

		annotation SummarizationSetBy = Automatic

	column delivery_type
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: 3a5d82a4-3f00-4cee-a695-5121574070bd
		summarizeBy: none
		sourceColumn: delivery_type

		annotation SummarizationSetBy = Automatic

	column delivery_slot
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: f80c3e86-ea92-4d0c-895c-ae4a8516b1fd
		summarizeBy: none
		sourceColumn: delivery_slot

		annotation SummarizationSetBy = Automatic

	column CDC%
		dataType: double
		sourceProviderType: double
		lineageTag: 86be18aa-bd1a-4aad-ac53-e32c55cdb077
		summarizeBy: sum
		sourceColumn: CDC%

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	partition 'IM CDC% Decomposition Tree - Today' = m
		mode: directQuery
		queryGroup: IM\IM-Today\IM-Cancellation\IM-CDC
		source = ```
				let
				    // Get current date and time in UTC
				    TodayDateTimeZone = DateTimeZone.UtcNow(),
				
				    // Convert UTC time to IST
				    TodaysDateTime = TodayDateTimeZone + #duration(0, 5, 30, 0),
				
				    TodaysTime = Time.ToText(DateTime.Time(TodaysDateTime), "HH:mm:ss"),
				
				    StartOfToday = DateTime.FromText(Date.ToText(DateTime.Date(TodaysDateTime)) & " 00:00:00"),
				
				    // // // Format the start and end dates to yyyy-MM-dd HH:mm:ss format
				    StartOfTodayFormatted = DateTime.ToText(StartOfToday, "yyyy-MM-dd HH:mm:ss"),
				    CurrentDateTime = DateTime.FromText(Date.ToText(DateTime.Date(TodaysDateTime)) & " " & TodaysTime),
				    CurrentDateTimeFormatted = DateTime.ToText(CurrentDateTime, "yyyy-MM-dd HH:mm:ss"),
				
				    // Reference the Table Name parameter dynamically
				    TableName = IMTableName,
				    
				    // Reference all dynamic parameters
				    IMCityParam = if Value.Is(IM_City_Parameter, type list) then IM_City_Parameter else {IM_City_Parameter},
				    RegionParam = if Value.Is(Region_Parameter, type list) then Region_Parameter else {Region_Parameter},
				    ZoneParam = if Value.Is(Zone_Parameter, type list) then Zone_Parameter else {Zone_Parameter},
				    StoreIDParam = if Value.Is(StoreID_Parameter, type list) then StoreID_Parameter else {StoreID_Parameter},
				    DeliveryTypeParam = if Value.Is(DeliveryType_Parameter, type list) then DeliveryType_Parameter else {DeliveryType_Parameter},
				    DeliverySlotParam = if Value.Is(DeliverySlot_Parameter, type list) then DeliverySlot_Parameter else {DeliverySlot_Parameter},
				
				    // BUild Dynamic Conditions
				    IMCityCondition = if List.NonNullCount(IMCityParam) > 0 then " | where city in (" & Text.Combine(List.Transform(IMCityParam, each "'" & _ & "'"), ", ") & ")" else "",
				    RegionCondition = if List.NonNullCount(RegionParam) > 0 then " | where region in (" & Text.Combine(List.Transform(RegionParam, each "'" & _ & "'"), ", ") & ")" else "",
				    ZoneCondition = if List.NonNullCount(ZoneParam) > 0 then " | where zone in (" & Text.Combine(List.Transform(ZoneParam, each "'" & _ & "'"), ", ") & ")" else "",
				    StoreIDCondition = if List.NonNullCount(StoreIDParam) > 0 then " | where store_id in (" & Text.Combine(List.Transform(StoreIDParam, each "'" & _ & "'"), ", ") & ")" else "",
				    DeliveryTypeCondition = if List.NonNullCount(DeliveryTypeParam) > 0 then " | where delivery_type in (" & Text.Combine(List.Transform(DeliveryTypeParam, each "'" & _ & "'"), ", ") & ")" else "",
				    DeliverySlotCondition = if List.NonNullCount(DeliverySlotParam) > 0 then " | where delivery_slot in (" & Text.Combine(List.Transform(DeliverySlotParam, each "'" & _ & "'"), ", ") & ")" else "",
				     
				    // Combine All Filters
				    CombinedFilters = IMCityCondition & RegionCondition & ZoneCondition & StoreIDCondition & DeliveryTypeCondition & DeliverySlotCondition,
				
				    // Format the query with dynamic start and end times for yesterday in IST
				     Query = "let currentUser = current_principal_details()['UserPrincipalName'];
				    let userCities = toscalar(
				        Anobis_RLS_MV
				        | where UserEmail_ID == currentUser
				        | summarize make_list(city)
				    );
				    let hasAllAccess = toscalar(
				        Anobis_RLS_MV
				        | where UserEmail_ID == currentUser and city == 'cities'
				        | count
				    );
				    "&  TableName & " 
				        |where created_at_ist >= datetime('"& StartOfTodayFormatted &"') 
				        |where created_at_ist <= datetime('"& CurrentDateTimeFormatted &"')
				        | where updated_at_ist <= datetime('"& CurrentDateTimeFormatted &"')   
				               and ((hasAllAccess > 0) or (city in (userCities)))
				            " & CombinedFilters & "
				            and dp_order_type == 'INSTAMART'
				        | extend cdc_cancelled = iff(cancel_type == 'CANCEL_TYPE_CUSTOMER_DRIVEN_CANCELLATION', 1.0, 0.0)
				        | extend delivered = iff(status == 'COMPLETED', 1.0, 0.0)
				        | summarize
				            CDCCount = sum(cdc_cancelled),
				            DeliveredDistinctCount = dcount(iff(status == 'COMPLETED', order_id, ''))
				            by city, region, zone,store_id, delivery_type, delivery_slot  // Group by city, region, and zone
				        | extend ['CDC%']=round(iff(DeliveredDistinctCount == 0, 0.0, 100.0 * CDCCount / DeliveredDistinctCount), 2)
				        | project city, region, zone,store_id, delivery_type, delivery_slot,['CDC%']
				        | order by city, region, zone,store_id, delivery_type, delivery_slot  // Optional: Order by zone, then region, then city",
				        
				    // // Get data from Azure Data Explorer with the dynamic query
				    Source = AzureDataExplorer.Contents(Cluster, DB, Query, [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null])
				in
				    Source
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

