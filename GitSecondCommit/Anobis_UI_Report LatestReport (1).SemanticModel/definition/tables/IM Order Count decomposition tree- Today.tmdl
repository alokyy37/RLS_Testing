table 'IM Order Count decomposition tree- Today'
	lineageTag: 9852555e-7044-482d-aa91-3611e7a8bb46

	column City
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: d57c41ca-06c6-41e7-ab94-04adbd0ffde2
		summarizeBy: none
		sourceColumn: City

		annotation SummarizationSetBy = Automatic

	column Region
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: ea3cd58e-fab9-4125-9eb0-6134b5190854
		summarizeBy: none
		sourceColumn: Region

		annotation SummarizationSetBy = Automatic

	column Zone
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: 927d6fcc-699d-4ca6-8ece-e350a6f4cb1c
		summarizeBy: none
		sourceColumn: Zone

		annotation SummarizationSetBy = Automatic

	column 'Store ID'
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: 6ade5d1f-6c92-4f35-b5a0-224c0b793008
		summarizeBy: none
		sourceColumn: Store ID

		annotation SummarizationSetBy = Automatic

	column 'Delivery Type'
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: 22912f12-2649-4aaa-a90c-8243f700c34c
		summarizeBy: none
		sourceColumn: Delivery Type

		annotation SummarizationSetBy = Automatic

	column 'Delivery Slot'
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: dcadcabe-d20e-4185-bbeb-8e678f72df1d
		summarizeBy: none
		sourceColumn: Delivery Slot

		annotation SummarizationSetBy = Automatic

	column count_
		dataType: int64
		formatString: 0
		sourceProviderType: bigint
		lineageTag: 4f613e88-de0b-49ba-befa-26431f47537f
		summarizeBy: sum
		sourceColumn: count_

		annotation SummarizationSetBy = Automatic

	partition 'IM Order Count decomposition tree- Today' = m
		mode: directQuery
		queryGroup: IM\IM-Today\IM-Sales\IM-Orders
		source = ```
				let
				    // Get current date and time in UTC
				    TodayDateTimeZone = DateTimeZone.UtcNow(),
				
				    // Convert UTC time to IST
				    TodaysDateTime = TodayDateTimeZone + #duration(0, 5, 30, 0),
				
				    TodaysTime = Time.ToText(DateTime.Time(TodaysDateTime), "HH:mm:ss"),
				
				    StartOfToday = DateTime.FromText(Date.ToText(DateTime.Date(TodaysDateTime)) & " 00:00:00"),
				
				    // // // Format the start and end dates to yyyy-MM-dd HH:mm:ss format
				    StartOfTodayFormatted = DateTime.ToText(StartOfToday, "yyyy-MM-dd HH:mm:ss"),
				    CurrentDateTime = DateTime.FromText(Date.ToText(DateTime.Date(TodaysDateTime)) & " " & TodaysTime),
				    CurrentDateTimeFormatted = DateTime.ToText(CurrentDateTime, "yyyy-MM-dd HH:mm:ss"),
				
				    // Reference the Table Name parameter dynamically
				    TableName = IMTableName,
				    
				    // Reference all dynamic parameters
				    IMCityParam = if Value.Is(IM_City_Parameter, type list) then IM_City_Parameter else {IM_City_Parameter},
				    RegionParam = if Value.Is(Region_Parameter, type list) then Region_Parameter else {Region_Parameter},
				    ZoneParam = if Value.Is(Zone_Parameter, type list) then Zone_Parameter else {Zone_Parameter},
				    StoreIDParam = if Value.Is(StoreID_Parameter, type list) then StoreID_Parameter else {StoreID_Parameter},
				    DeliveryTypeParam = if Value.Is(DeliveryType_Parameter, type list) then DeliveryType_Parameter else {DeliveryType_Parameter},
				    DeliverySlotParam = if Value.Is(DeliverySlot_Parameter, type list) then DeliverySlot_Parameter else {DeliverySlot_Parameter},
				
				    // BUild Dynamic Conditions
				    IMCityCondition = if List.NonNullCount(IMCityParam) > 0 then " | where city in (" & Text.Combine(List.Transform(IMCityParam, each "'" & _ & "'"), ", ") & ")" else "",
				    RegionCondition = if List.NonNullCount(RegionParam) > 0 then " | where region in (" & Text.Combine(List.Transform(RegionParam, each "'" & _ & "'"), ", ") & ")" else "",
				    ZoneCondition = if List.NonNullCount(ZoneParam) > 0 then " | where zone in (" & Text.Combine(List.Transform(ZoneParam, each "'" & _ & "'"), ", ") & ")" else "",
				    StoreIDCondition = if List.NonNullCount(StoreIDParam) > 0 then " | where store_id in (" & Text.Combine(List.Transform(StoreIDParam, each "'" & _ & "'"), ", ") & ")" else "",
				    DeliveryTypeCondition = if List.NonNullCount(DeliveryTypeParam) > 0 then " | where delivery_type in (" & Text.Combine(List.Transform(DeliveryTypeParam, each "'" & _ & "'"), ", ") & ")" else "",
				    DeliverySlotCondition = if List.NonNullCount(DeliverySlotParam) > 0 then " | where delivery_slot in (" & Text.Combine(List.Transform(DeliverySlotParam, each "'" & _ & "'"), ", ") & ")" else "",
				     
				    // Combine All Filters
				    CombinedFilters = IMCityCondition & RegionCondition & ZoneCondition & StoreIDCondition & DeliveryTypeCondition & DeliverySlotCondition,
				
				    // Format the query with dynamic start and end times for yesterday in IST
				     Query = "let currentUser = current_principal_details()['UserPrincipalName'];
				    let userCities = toscalar(
				        Anobis_RLS_MV
				        | where UserEmail_ID == currentUser
				        | summarize make_list(city)
				    );
				    let hasAllAccess = toscalar(
				        Anobis_RLS_MV
				        | where UserEmail_ID == currentUser and city == 'cities'
				        | count
				    );
				    "&  TableName & " 
				    |where created_at_ist >= datetime('"& StartOfTodayFormatted &"') 
				    |where created_at_ist <= datetime('"& CurrentDateTimeFormatted &"')
				    | where updated_at_ist <= datetime('"& CurrentDateTimeFormatted &"')   
				      and ((hasAllAccess > 0) or (city in (userCities)))
				            " & CombinedFilters & "
				    |where dp_order_type == 'INSTAMART' and (status == 'DELIVERY_DELIVERED' or status == 'COMPLETED') 
				     and (order_level != 'ORDER_LEVEL_LEAF' or isempty(order_level)) 
				    |summarize count() by city, region, zone, store_id, delivery_type, delivery_slot",
				    
				    // // Get data from Azure Data Explorer with the dynamic query
				    Source = AzureDataExplorer.Contents(Cluster, DB, Query, [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]),
				    #"Renamed Columns" = Table.RenameColumns(Source,{{"city", "City"}, {"region", "Region"}, {"zone", "Zone"}, {"store_id", "Store ID"}, {"delivery_type", "Delivery Type"}, {"delivery_slot", "Delivery Slot"}})
				in
				    #"Renamed Columns"
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

